name: Build    
    
on: [push, pull_request]    
    
jobs:    
  test:    
    runs-on: ubuntu-latest    
    strategy:    
      matrix:    
        dotnet: ['8.0']    
    steps:    
      - uses: actions/checkout@v4    
      - name: Setup .NET    
        uses: actions/setup-dotnet@v4    
        with:    
          dotnet-version: ${{ matrix.dotnet }}    
          dotnet-quality: 'ga'    
      - name: Restore dependencies    
        run: dotnet restore    
      - name: Build    
        run: dotnet build --no-restore    
      - name: Run tests    
        run: dotnet test --no-build --verbosity normal    
  
  build-binaries:  
    needs: test  
    runs-on: ${{ matrix.os }}  
    strategy:  
      matrix:  
        include:  
          - os: ubuntu-latest  
            platform: linux-x64  
            output_name: linux-x86_64  
            executable_name: casbin  
          - os: ubuntu-latest    
            platform: linux-arm64  
            output_name: linux-arm64  
            executable_name: casbin  
          - os: windows-latest  
            platform: win-x64  
            output_name: windows-x86_64.exe  
            executable_name: casbin.exe  
          - os: windows-latest  
            platform: win-arm64    
            output_name: windows-arm64.exe  
            executable_name: casbin.exe  
          - os: macos-latest  
            platform: osx-x64  
            output_name: darwin-x86_64  
            executable_name: casbin  
          - os: macos-latest  
            platform: osx-arm64  
            output_name: darwin-arm64  
            executable_name: casbin  
  
    steps:  
      - uses: actions/checkout@v4  
      - name: Setup .NET  
        uses: actions/setup-dotnet@v4  
        with:  
          dotnet-version: '8.0'  
          dotnet-quality: 'ga'  
            
      - name: Build binary  
        run: |  
          dotnet publish src/CasbinCli/CasbinCli.csproj -c Release -r ${{ matrix.platform }} --self-contained true -p:PublishSingleFile=true -o "dist/${{ matrix.platform }}"  
            
      - name: Copy and rename binary (Windows)  
        if: runner.os == 'Windows'  
        run: |  
          New-Item -ItemType Directory -Force -Path "dist"  
          $targetName = "casbin-dotnet-cli-${{ matrix.output_name }}"  
          Copy-Item "dist/${{ matrix.platform }}/${{ matrix.executable_name }}" "dist/$targetName"  
        shell: pwsh  
            
      - name: Copy and rename binary (Unix)  
        if: runner.os != 'Windows'  
        run: |  
          mkdir -p dist  
          target_name="casbin-dotnet-cli-${{ matrix.output_name }}"  
          cp "dist/${{ matrix.platform }}/${{ matrix.executable_name }}" "dist/$target_name"  
        shell: bash  
            
      - name: Upload artifacts  
        uses: actions/upload-artifact@v4  
        with:  
          name: binaries-${{ matrix.platform }}  
          path: dist/casbin-dotnet-cli-${{ matrix.output_name }}  
  
  release:    
    needs: [test, build-binaries]    
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'    
    runs-on: ubuntu-latest    
    permissions:    
      contents: write    
    steps:    
      - name: Checkout    
        uses: actions/checkout@v4    
        with:    
          fetch-depth: 0    
          persist-credentials: false    
    
      - name: Setup Node.js    
        uses: actions/setup-node@v4    
        with:    
          node-version: 20    
    
      - name: Setup .NET    
        uses: actions/setup-dotnet@v4    
        with:    
          dotnet-version: '8.0'    
          dotnet-quality: 'ga'    
    
      - name: Get Casbin.NET version    
        id: casbin-version    
        run: |    
          version=$(dotnet list src/CasbinCli/CasbinCli.csproj package | grep "Casbin.NET" | awk '{print $3}')    
          echo "version=$version" >> $GITHUB_OUTPUT    
  
      - name: Download all artifacts  
        uses: actions/download-artifact@v4  
        with:  
          path: artifacts  
  
      - name: Move binaries to dist  
        run: |  
          mkdir -p dist  
          find artifacts -name "casbin-dotnet-cli-*" -type f -exec cp {} dist/ \;  
          ls -la dist/  
    
      - name: Release    
        id: semantic    
        env:    
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    
        run: npx semantic-release@v19.0.2